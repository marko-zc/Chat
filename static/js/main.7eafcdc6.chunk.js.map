{"version":3,"sources":["Components/Messages.js","Components/Input.js","App.js","index.js"],"names":["Messages","messagesEnd","React","createRef","scrollToBottom","current","scrollIntoView","behavior","this","message","member","text","currentMember","props","className","id","style","backgroundColor","clientData","color","username","messages","map","m","renderMessage","ref","Component","Input","state","textInput","e","setState","target","value","preventDefault","onSendMessage","focus","onSubmit","onChange","type","placeholder","autoFocus","App","randomName","adjectives","nouns","Math","floor","random","length","randomColor","toString","drone","publish","room","window","Scaledrone","data","on","error","console","clientId","subscribe","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7eafcdc6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Messages extends React.Component\r\n{\r\n\r\n  messagesEnd = React.createRef();\r\n\r\n  componentDidMount () {\r\n    this.scrollToBottom()\r\n  }\r\n  componentDidUpdate () {\r\n    this.scrollToBottom()\r\n  }\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.current.scrollIntoView({ behavior: 'smooth' })\r\n  }\r\n\r\n  renderMessage(message) {\r\n    const {member, text} = message;\r\n    const {currentMember} = this.props;\r\n    const messageFromMe = member.id === currentMember.id;\r\n    const className = messageFromMe ?\r\n      \"Messages-message currentMember\" : \"Messages-message\";\r\n    return (\r\n      <li className={className}>\r\n        <span\r\n          className=\"avatar\"\r\n          style={{backgroundColor: member.clientData.color}}\r\n        />\r\n        <div className=\"Message-content\">\r\n          <div className=\"username\">\r\n            {member.clientData.username}\r\n          </div>\r\n          <div className=\"text\">{text}</div>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {messages} = this.props;\r\n    return (\r\n      <ul className=\"Messages-list\">\r\n        {messages.map(m => this.renderMessage(m))}\r\n        <div ref={this.messagesEnd} />\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Messages;","import React from \"react\";\r\n\r\n\r\nclass Input extends React.Component\r\n{\r\n    state = {\r\n      text: \"\"\r\n    }\r\n  \r\n    textInput = React.createRef();\r\n\r\n\r\n  onChange(e) {\r\n    this.setState({text: e.target.value});\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({text: \"\"});\r\n    this.props.onSendMessage(this.state.text);\r\n    this.textInput.current.focus();\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Input\">\r\n        <form onSubmit={e => this.onSubmit(e)}>\r\n          <input\r\n            ref={this.textInput}\r\n            onChange={e => this.onChange(e)}\r\n            value={this.state.text}\r\n            type=\"text\"\r\n            placeholder=\"Enter your message and press ENTER\"\r\n            autoFocus={true}\r\n          />\r\n          <button>Send</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport Messages from \"./Components/Messages\";\r\nimport Input from \"./Components/Input\";\r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends React.Component\r\n{\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      messages: [],\r\n      member: {\r\n        username: this.randomName(),\r\n        color: this.randomColor()\r\n      }\r\n    }\r\n\r\n    this.drone = new window.Scaledrone(\"k1eLJg4RRWUWyNQV\", {\r\n      data: this.state.member\r\n    });\r\n    this.drone.on('open', error => {\r\n      if (error) {\r\n        return console.error(error);\r\n      }\r\n      const member = {...this.state.member};\r\n      member.id = this.drone.clientId;\r\n      this.setState({member});\r\n    });\r\n\r\n    const room = this.drone.subscribe(\"observable-room\");\r\n\r\n    room.on('data', (data, member) => {\r\n      const messages = this.state.messages;\r\n      messages.push({member, text: data});\r\n      this.setState({messages});\r\n    });\r\n  }\r\n\r\n  randomName = () => {\r\n    const adjectives = [\"autumn\", \"hidden\", \"bitter\", \"misty\", \"silent\", \"empty\", \"dry\", \"dark\", \"summer\", \"icy\", \"delicate\", \"quiet\", \"white\", \"cool\", \"spring\", \"winter\", \"patient\", \"twilight\", \"dawn\", \"crimson\", \"wispy\", \"weathered\", \"blue\", \"billowing\", \"broken\", \"cold\", \"damp\", \"falling\", \"frosty\", \"green\", \"long\", \"late\", \"lingering\", \"bold\", \"little\", \"morning\", \"muddy\", \"old\", \"red\", \"rough\", \"still\", \"small\", \"sparkling\", \"throbbing\", \"shy\", \"wandering\", \"withered\", \"wild\", \"black\", \"young\", \"holy\", \"solitary\", \"fragrant\", \"aged\", \"snowy\", \"proud\", \"floral\", \"restless\", \"divine\", \"polished\", \"ancient\", \"purple\", \"lively\", \"nameless\"];\r\n    const nouns = [\"waterfall\", \"river\", \"breeze\", \"moon\", \"rain\", \"wind\", \"sea\", \"morning\", \"snow\", \"lake\", \"sunset\", \"pine\", \"shadow\", \"leaf\", \"dawn\", \"glitter\", \"forest\", \"hill\", \"cloud\", \"meadow\", \"sun\", \"glade\", \"bird\", \"brook\", \"butterfly\", \"bush\", \"dew\", \"dust\", \"field\", \"fire\", \"flower\", \"firefly\", \"feather\", \"grass\", \"haze\", \"mountain\", \"night\", \"pond\", \"darkness\", \"snowflake\", \"silence\", \"sound\", \"sky\", \"shape\", \"surf\", \"thunder\", \"violet\", \"water\", \"wildflower\", \"wave\", \"water\", \"resonance\", \"sun\", \"wood\", \"dream\", \"cherry\", \"tree\", \"fog\", \"frost\", \"voice\", \"paper\", \"frog\", \"smoke\", \"star\"];\r\n    const adjective = adjectives[Math.floor(Math.random() * adjectives.length)];\r\n    const noun = nouns[Math.floor(Math.random() * nouns.length)];\r\n    return adjective + noun;\r\n  }\r\n  \r\n  randomColor = () => {\r\n    return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\r\n  }\r\n\r\n  onSendMessage = (message) => {\r\n    this.drone.publish({\r\n      room: \"observable-room\",\r\n      message\r\n    });\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-header\">\r\n          <h1>My Chat App</h1>\r\n        </div>\r\n\r\n        <Messages\r\n          messages={this.state.messages}\r\n          currentMember={this.state.member}\r\n        />\r\n        <Input\r\n          onSendMessage={this.onSendMessage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}